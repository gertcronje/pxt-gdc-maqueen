<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="LltUo(x(UbwKbYL/x*nB" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="*MsBf]SnkigreZt-ACW7"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace gdcMaqueen {" line1="" line2="    enum motorState {" line3="        STOP = 0," line4="        FORWARD = 1," line5="        BACKWARD = 2," line6="        LEFT = 3," line7="        RIGHT = 4," line8="        FOLLOW = 5" line9="    }" line10="" line11="    enum followDir {" line12="        STRAIGHT = 0," line13="        LEFT = 1," line14="        RIGHT = 2" line15="    }" line16="" line17="    let stop_count = 0" line18="    let motor_speed = 0" line19="    let motor_calib = 0" line20="    let motor_state = motorState.STOP" line21="    let r_speed = 0" line22="    let l_speed = 0" line23="    let l_count = 0" line24="    let r_count = 0" line25="    let follow_ctrl = 0" line26="    let motor_ctrl = 0" line27="    let last_follow_dir = followDir.STRAIGHT" line28="    " line29="    follow_ctrl = 50" line30="    motor_ctrl = 20" line31="    motor_calib = 10" line32="" line33="    //% block=&quot;set follow control $value&quot;" line34="    export function set_follow_control(value: number) {" line35="        follow_ctrl = value" line36="    }" line37="" line38="    //% block=&quot;set motor control $value&quot;" line39="    export function set_motor_control(value: number) {" line40="        motor_ctrl = value" line41="    }" line42="" line43="    //% block=&quot;set motor calibration $value&quot;" line44="    export function set_motor_calibration(value: number) {" line45="        motor_calib = value" line46="    }" line47="" line48="    //% block=&quot;get motor state&quot;" line49="    export function get_motor_state(): motorState {" line50="        return motor_state;" line51="    }" line52="" line53="    //% block=&quot;get motor $motor counter&quot;" line54="    export function get_motor_count(motor: maqueen.Motors) {" line55="        if(motor = maqueen.Motors.M1)" line56="            return l_count;" line57="        else " line58="            return r_count;" line59="    }" line60="    " line61="    //% block=&quot;open claw&quot;" line62="    export function open_claw() {" line63="        maqueen.servoRun(maqueen.Servos.S1, 60)" line64="    }" line65="    " line66="    //% block=&quot;close claw&quot;" line67="    export function close_claw() {" line68="        maqueen.servoRun(maqueen.Servos.S1, 10)" line69="    }" line70="" line71="    //% block=&quot;move backward at $speed for $rotations rotations&quot;" line72="    //% speed.defl=200" line73="    //% rotations.defl=1" line74="    export function backward(speed: number, rotations: number) {" line75="        r_count = 0" line76="        l_count = 0" line77="        l_speed = speed " line78="        r_speed = speed + motor_calib" line79="        motor_state = motorState.BACKWARD" line80="        motor_speed = speed" line81="        stop_count = rotations * 24" line82="        maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CCW, l_speed)" line83="        maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CCW, r_speed)" line84="    }" line85="" line86="    // Monitor right motor encoder" line87="    pins.onPulsed(DigitalPin.P1, PulseValue.High, function () {" line88="        if (motor_state &gt; motorState.STOP) {" line89="            r_count += 1" line90="        }" line91="    })" line92="" line93="    // Monitor left motor encoder" line94="    pins.onPulsed(DigitalPin.P0, PulseValue.High, function () {" line95="        if (motor_state &gt; motorState.STOP) {" line96="            l_count += 1" line97="        }" line98="    })" line99="" line100="    //% block=&quot;wait movement done&quot;" line101="    export function wait_movement_done() {" line102="        while (motor_state &gt; motorState.STOP) {" line103="            basic.pause(100)" line104="        }" line105="    }" line106="    " line107="    //% block=&quot;turn left at $speed for $rotations rotations&quot;" line108="    //% speed.defl=50" line109="    //% rotations.defl=1" line110="    export function turn_left(speed: number, rotations: number) {" line111="        r_count = 0" line112="        l_count = 0" line113="        maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CCW, speed)" line114="        maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, speed)" line115="        stop_count = rotations * 24" line116="        motor_state = motorState.LEFT" line117="    }" line118="" line119="    //% block=&quot;move forward at $speed for $rotations rotations&quot;" line120="    //% speed.defl=200" line121="    //% rotations.defl=1" line122="    export function forward(speed: number, rotations: number) {" line123="        r_count = 0" line124="        l_count = 0" line125="        l_speed = speed" line126="        r_speed = speed + motor_calib" line127="        motor_state = motorState.FORWARD" line128="        motor_speed = speed" line129="        stop_count = rotations * 24" line130="        maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, l_speed)" line131="        maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, r_speed)" line132="    }" line133="" line134="    //% block=&quot;turn right at $speed for $rotations rotations&quot;" line135="    //% speed.defl=50" line136="    //% rotations.defl=1" line137="    export function turn_right(speed: number, rotations: number) {" line138="        r_count = 0" line139="        l_count = 0" line140="        maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, speed)" line141="        maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CCW, speed)" line142="        stop_count = rotations * 24" line143="        motor_state = motorState.RIGHT" line144="    }" line145="" line146="    //% block=&quot;follow line at $speed for $rotations&quot;" line147="    //% speed.defl=200" line148="    //% rotations.defl=10" line149="    export function follow_line(speed: number, rotations: number) {" line150="        r_count = 0" line151="        l_count = 0" line152="        motor_state = motorState.FOLLOW" line153="        motor_speed = speed" line154="        l_speed = speed" line155="        r_speed = speed + motor_calib" line156="        stop_count = rotations * 24" line157="" line158="        maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, l_speed)" line159="        maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, r_speed)" line160="    }" line161="" line162="    function stop_count_reached(motor: maqueen.Motors) {" line163="        if(motor == maqueen.Motors.M1) " line164="            return l_count &gt;= stop_count;" line165="        else if(motor == maqueen.Motors.M2)" line166="            return r_count &gt;= stop_count;" line167="        else " line168="            return (l_count &gt;= stop_count) &amp;&amp; (r_count &gt;= stop_count)" line169="    }" line170="" line171="    // background task to monitor and contrl motor movement" line172="    basic.forever(function () {" line173="        if (motor_state &gt; motorState.STOP &amp;&amp; motor_state &lt; motorState.LEFT) {" line174="            if (l_count &gt; r_count + 2) {" line175="                r_speed = motor_speed + motor_ctrl + motor_calib" line176="                l_speed = motor_speed" line177="            } else if (l_count &lt; r_count - 2) {" line178="                r_speed = motor_speed + motor_calib" line179="                l_speed = motor_speed + motor_ctrl" line180="            } else {" line181="                r_speed = motor_speed" line182="                l_speed = motor_speed" line183="            }" line184="            " line185="            if (stop_count_reached(maqueen.Motors.All)) {" line186="                motor_state = motorState.STOP" line187="                motor_speed = 0" line188="                maqueen.motorStop(maqueen.Motors.All)" line189="            } else {" line190="                if (motor_state == motorState.FORWARD) {" line191="                    maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, l_speed)" line192="                    maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, r_speed)" line193="                } else if (motor_state == motorState.BACKWARD) {" line194="                    maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CCW, l_speed)" line195="                    maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CCW, r_speed)" line196="                }" line197="            }" line198="        } else if (motor_state == motorState.LEFT || motor_state == motorState.RIGHT) {" line199="            if (stop_count_reached(maqueen.Motors.M1)) {" line200="                maqueen.motorStop(maqueen.Motors.M1)" line201="            }" line202="            if (stop_count_reached(maqueen.Motors.M2)) {" line203="                maqueen.motorStop(maqueen.Motors.M2)" line204="            }" line205="            if (stop_count_reached(maqueen.Motors.All)) {" line206="                motor_state = motorState.STOP" line207="            }" line208="        } else if (motor_state == motorState.FOLLOW) {" line209="            let l = maqueen.readPatrol(maqueen.Patrol.PatrolLeft)" line210="            let r = maqueen.readPatrol(maqueen.Patrol.PatrolRight)" line211="" line212="            // both on the line" line213="            if((l == 1) &amp;&amp; (r == 1)) {" line214="                l_speed = motor_speed" line215="                r_speed = motor_speed + motor_calib" line216="                last_follow_dir = followDir.STRAIGHT" line217="            } else if((l == 1) &amp;&amp; (r == 0)) { // only left on the line - turn left" line218="                l_speed = motor_speed - follow_ctrl" line219="                r_speed = motor_speed + motor_calib" line220="                last_follow_dir = followDir.LEFT" line221="            } else if ((l == 0) &amp;&amp; (r == 1)) { // only right on the line - turn right" line222="                l_speed = motor_speed " line223="                r_speed = motor_speed - follow_ctrl + motor_calib" line224="                last_follow_dir = followDir.RIGHT" line225="            } else { // both off the line -- turn opposite from last direction" line226="                if(last_follow_dir == followDir.LEFT) {" line227="                    l_speed = motor_speed" line228="                    r_speed = motor_speed - follow_ctrl + motor_calib" line229="                } else if (last_follow_dir == followDir.RIGHT) {" line230="                    l_speed = motor_speed - follow_ctrl" line231="                    r_speed = motor_speed + motor_calib" line232="                }" line233="            }" line234="            // set motor speed" line235="            maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, l_speed)" line236="            maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, r_speed)" line237="" line238="            if(stop_count_reached(maqueen.Motors.All)) {" line239="                maqueen.motorStop(maqueen.Motors.All)" line240="                motor_state = motorState.STOP" line241="            }" line242="        } else {" line243="            basic.pause(100)" line244="        }" line245="    })" line246="}" numlines="247"></mutation></block></statement></block></xml>